#include <stdio.h>

/* обычная функция, возводящая 10 в степень. Просто чтобы не подключать cmath */
unsigned long long pow10 (unsigned long long N)
{
    unsigned long long answer = 1;
    for (unsigned long long i = 0; i<N; i++)
    {
        answer *= 10;
    }

    return answer;
}
int main()
{
    unsigned long long N, K;

    /* использовал функции из C для более быстрой отработки */
    scanf("%lld", &N);
    scanf("%lld", &K);

    /* Для K можно сразу отбросить "целую часть", которая и так без остатка делится на 7 */
    K %= 7;

    /* "Несложно заметить", что при делении на 7 у нас в дробной части период длиной 6
     всегда. Поэтому нет смысла считать, что там в больших N, если цифры всё равно повторяются */
    N %= 6;

    /* костыль на случай, когда N делится нацело на 6. Не можем вывести 0 цифру после запятой*/
    N = (N == 0) ? 6 : N;

    /* Выполняем всё в целых числах. Поэтому СНАЧАЛА умножаем на 10^N, а потом уже делим нацело на 7 и смотрим последнюю цифру*/
    printf("%lld", ((K * pow10(N)) / 7) % 10);
    return 0;
}
